{
  "parser": "@typescript-eslint/parser",
  "extends": ["plugin:@typescript-eslint/recommended", "plugin:react/recommended", "plugin:prettier/recommended", "@react-native-community"],
  "plugins": ["prettier", "@typescript-eslint", "react-hooks", "react"],
  "rules": {
    "prettier/prettier": "error",
    "quotes": ["error", "single"],
    "@typescript-eslint/array-type": ["error", { "default": "array" }],
    "comma-dangle": ["error", "always-multiline"],
    "semi": ["error", "never"],
    "curly": ["error", "multi-line"],
    "newline-before-return": "error",
    "no-bitwise": "error",
    "no-console": "warn",
    "react-hooks/exhaustive-deps": "warn",
    "@typescript-eslint/explicit-module-boundary-types": "off", // Optional: If you want to disable explicit return types on functions.
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "any", "prev": "return", "next": "*" }
    ],
    "react/react-in-jsx-scope": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "no-restricted-globals": [
      "error",
      { "name": "any", "message": "The use of 'any' is not allowed. Please use more specific types." }
    ]
  },
  "settings": {
    "react": {
      "pragma": "React", // Pragma to use, default to "React"
      "version": "detect"
    }
  }
}
